---
- name: Sync harbor package to remote
  copy:
    src: >-
      {{ .binary_dir }}/image-registry/harbor/{{ .harbor_version }}/{{ .binary_type }}/harbor-offline-installer-{{ .harbor_version }}.tgz
    dest: >-
      /opt/harbor/{{ .harbor_version }}/harbor-offline-installer-{{ .harbor_version }}.tgz

- name: Untar harbor package
  command: |
    cd /opt/harbor/{{ .harbor_version }}/ && tar -zxvf harbor-offline-installer-{{ .harbor_version }}.tgz

- name: Sync image registry cert file to remote
  copy:
    src: >-
      {{ .binary_dir }}/pki/image_registry.crt
    dest: >-
      /opt/harbor/{{ .harbor_version }}/ssl/server.crt

- name: Sync image registry key file to remote
  copy:
    src: >-
      {{ .binary_dir }}/pki/image_registry.key
    dest: >-
      /opt/harbor/{{ .harbor_version }}/ssl/server.key

- name: Generate harbor config
  template:
    src: harbor.yml
    dest: >-
      /opt/harbor/{{ .harbor_version }}/harbor/harbor.yml

- name: Install harbor
  command: |
    cd /opt/harbor/{{ .harbor_version }}/harbor && /bin/bash install.sh

- name: Register harbor service
  template:
    src: harbor.service
    dest: /etc/systemd/system/harbor.service

- name: Start harbor service
  command: systemctl daemon-reload && systemctl start harbor.service && systemctl enable harbor.service

- name: HA harbor sync images
  when:
    - .image_registry.ha_vip | empty | not
    - .groups.image_registry | len | lt 1
  block:
    - name: add keepalived service to docker-compose
      command: |
        KEEPALIVED_SERVICE='# keepalived is generated by kubekey.
          keepalived:
            image: osixia/keepalived:{{ .keepalived_version }}
            container_name: keepalived
            command:
              - --copy-service
            network_mode: "host"
            restart: always
            dns_search: .
            cap_drop:
              - ALL
            cap_add:
              - NET_ADMIN
              - NET_BROADCAST
              - NET_RAW
              - CHOWN
              - DAC_OVERRIDE
            depends_on:
              - proxy
            volumes:
              - type: bind
                source: /opt/keepalived/{{ .keepalived_version }}/keepalived.conf
                target: /container/service/keepalived/assets/keepalived.conf
              - type: bind
                source: /opt/keepalived/{{ .keepalived_version }}/healthcheck.sh
                target: /etc/keepalived/healthcheck.sh'
        TARGET_FILE="/opt/harbor/{{ .harbor_version }}/harbor/docker-compose.yml"
        TMP_FILE="/opt/harbor/{{ .harbor_version }}/harbor/docker-compose.yml.tmp"
        awk -v service="$KEEPALIVED_SERVICE" '
          /^services:/ {
            print
            print service
            next
          }
          { print }
        ' "$TARGET_FILE" > "$TMP_FILE" && mv "$TMP_FILE" "$TARGET_FILE"
        systemctl restart harbor.service
    - name: wait harbor service ready
      command: |
        if ! timeout 300 bash -c 'while ! nc -zv localhost 443; do sleep 2; done'; then
            echo "ERROR: Harbor did not start within 5 minutes!"
            exit 1
        fi
    - name: sync harbor-replications scripts to remote
      template:
        src: harbor-replications.sh
        dest: /opt/harbor/scripts/harbor-replications.sh
        mode: 0755
    - name: execute harbor-replications.sh
      command: bash /opt/harbor/scripts/harbor-replications.sh
          