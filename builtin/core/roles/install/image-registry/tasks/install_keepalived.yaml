---
- name: Get interface from ha_vip
  block:
    - name: Get all interface with cidr
      command: |
        ip -o addr show | awk '
          BEGIN {
            printf "[\n"; 
            first = 1;
          }
          /inet / && !/ lo|docker|br-|veth/ {
            if (!first) {
              printf ",\n";
            }
            first = 0;
            printf "  {\n";
            printf "    \"interface\": \"%s\",\n", $2;
            printf "    \"cidr\": \"%s\"\n", $4;
            printf "  }";
          }
          END {
            printf "\n]\n";
          }
        '
      register: interface
      register_type: json
    - name: filter interface by ha_vip
      set_fact: 
          ha_vip_interface: >-
            {{- $interface := "" }}
            {{- range .interface.stdout | default list -}}
              {{- if .cidr | ipInCIDR | has $.image_registry.ha_vip -}}
                {{- $interface = .interface -}}
              {{- end -}}
            {{- end -}}
            {{ $interface }}
    - name: Check if network is exist
      assert:
        that: .kube_vip_interface | empty
        fail_msg: "cannot find network interface to match ha_vip"  

- name: Sync keepalived image to remote
  copy:
    src: >-
      {{ .binary_dir }}/image-registry/keepalived/{{ .keepalived_version }}/{{ .binary_type }}/keepalived-{{ .keepalived_version }}-linux-{{ .binary_type }}.tgz
    dest: >-
      /opt/keepalived/{{ .keepalived_version }}/keepalived-{{ .keepalived_version }}-linux-{{ .binary_type }}.tgz

- name: Load keeplived image
  command: |
    docker load -i /opt/keepalived/{{ .keepalived_version }}/keepalived-{{ .keepalived_version }}-linux-{{ .binary_type }}.tgz

- name: Sync keeplived config to remote
  template:
    src: keepalived.conf
    dest: >-
      /opt/keepalived/{{ .keepalived_version }}/keepalived.conf
    mode: 0664

- name: Sync healthcheck shell to remote
  copy:
    src: keepalived/healthcheck.sh
    dest: >-
      /opt/keepalived/{{ .keepalived_version }}/healthcheck.sh
    mode: 0755
