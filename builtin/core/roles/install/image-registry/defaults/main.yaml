image_registry:
  #  ha_vip: 192.168.122.59
  namespace_override: ""
  # which store images data which will push to registry.
  images_dir: |
    {{ .tmp_dir }}/images/
  auth:
    registry: |
      {{- if and .image_registry.ha_vip (ne .image_registry.ha_vip "") }}
        {{ .image_registry.ha_vip }}
      {{- else if .groups.image_registry | default list | len | lt 0 }}
        {{- $internalIPv4 := index .inventory_hosts (.groups.image_registry | default list | first) "internal_ipv4" | default "" }}
        {{- $internalIPv6 := index .inventory_hosts (.groups.image_registry | default list | first) "internal_ipv6" | default "" }}
        {{- if ne $internalIPv4 "" }}
          {{ $internalIPv4 }}
        {{- else if ne $internalIPv6 "" }}
          {{ $internalIPv6 }}
        {{- end }}
      {{- end }}
    username: admin
    password: Harbor12345
  # registry type. support: harbor, registry
  type: harbor
  # Virtual IP address for repository High Availability. the Virtual IP address should be available.
  registry:
    version: 2
    config:
      storage: nfs
      nfs_dir: /share/registry
    storage:
      filesystem:
        rootdir: /var/lib/registry
#        nfs_mount: /repository/registry # if set. will mount rootdirectory to nfs server in nfs_mount.
#      azure:
#        accountname: accountname
#        accountkey: base64encodedaccountkey
#        container: containername
#      gcs:
#        bucket: bucketname
#        keyfile: /path/to/keyfile
#        credentials:
#          type: service_account
#          project_id: project_id_string
#          private_key_id: private_key_id_string
#          private_key: private_key_string
#          client_email: client@example.com
#          client_id: client_id_string
#          auth_uri: http://example.com/auth_uri
#          token_uri: http://example.com/token_uri
#          auth_provider_x509_cert_url: http://example.com/provider_cert_url
#          client_x509_cert_url: http://example.com/client_cert_url
#        rootdirectory: /gcs/object/name/prefix
#      s3:
#        accesskey: awsaccesskey
#        secretkey: awssecretkey
#        region: us-west-1
#        regionendpoint: http://myobjects.local
#        bucket: bucketname
#        keyid: mykeyid
#        rootdirectory: /s3/object/name/prefix
