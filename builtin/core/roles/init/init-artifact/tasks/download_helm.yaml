---
- name: Helm | Ensure the Calico binary is available
  command: |
    artifact_name={{ .artifact.artifact_url.calico | splitList "/" | last }}
    artifact_path={{ .binary_dir }}/cni/calico
    if [ ! -f $artifact_path/$artifact_name ]; then
      mkdir -p $artifact_path
      # Download the Calico binary if it does not exist
      curl -Lo $artifact_path/$artifact_name {{ .artifact.artifact_url.calico }}
    fi
  when: .calico_version | empty | not

- name: Helm | Ensure the Cilium binary is available
  command: |
    artifact_name={{ .artifact.artifact_url.cilium | splitList "/" | last }}
    artifact_path={{ .binary_dir }}/cni/cilium
    if [ ! -f $artifact_path/$artifact_name ]; then
      mkdir -p $artifact_path
      # Download the Cilium binary if it does not exist
      curl -Lo $artifact_path/$artifact_name {{ .artifact.artifact_url.cilium }}
    fi
  when: .cilium_version | empty | not

- name: Helm | Ensure the Flannel binary is available
  command: |
    artifact_name={{ .artifact.artifact_url.flannel | splitList "/" | last }}
    artifact_path={{ .binary_dir }}/cni/flannel
    if [ ! -f $artifact_path/$artifact_name ]; then
      mkdir -p $artifact_path
      # Download the Flannel binary if it does not exist
      curl -Lo $artifact_path/$artifact_name {{ .artifact.artifact_url.flannel }}
    fi
  when: .flannel_version | empty | not

- name: Helm | Ensure the Kube-OVN binary is available
  tags: ["kubeovn"]
  command: |
    artifact_name={{ .artifact.artifact_url.kubeovn | splitList "/" | last }}
    artifact_path={{ .binary_dir }}/cni/kubeovn
    if [ ! -f $artifact_path/$artifact_name ]; then
      mkdir -p $artifact_path
      # Download the Kube-OVN binary if it does not exist
      curl -Lo $artifact_path/$artifact_name {{ .artifact.artifact_url.kubeovn }}
    fi
  when: .kubeovn_version | empty | not

- name: Helm | Ensure the Hybridnet binary is available
  tags: ["hybridnet"]
  command: |
    artifact_name={{ .artifact.artifact_url.hybridnet | splitList "/" | last }}
    artifact_path={{ .binary_dir }}/cni/hybridnet
    if [ ! -f $artifact_path/$artifact_name ]; then
      mkdir -p $artifact_path
      # Download the Hybridnet binary if it does not exist
      curl -Lo $artifact_path/$artifact_name {{ .artifact.artifact_url.hybridnet }}
    fi
  when: .hybridnet_version | empty | not

- name: Helm | Ensure the NFS Provisioner binary is available
  tags: ["nfs_provisioner"]
  command: |
    artifact_name={{ .artifact.artifact_url.nfs_provisioner | splitList "/" | last }}
    artifact_path={{ .binary_dir }}/sc
    if [ ! -f $artifact_path/$artifact_name ]; then
      mkdir -p $artifact_path
      # Download the NFS Provisioner binary if it does not exist
      curl -Lo $artifact_path/$artifact_name {{ .artifact.artifact_url.nfs_provisioner }}
    fi
  when: .nfs_provisioner_version | empty | not
