---
- name: Sync external etcd config
  when: 
    - and (.kubernetes.etcd.deployment_type | eq "external") (.groups.etcd | default list | len | lt 0)
    - .groups.kube_control_plane | default list | has .inventory_name
  block:
    - name: Sync etcd ca file to remote
      copy:
        src: |
          {{ .work_dir }}/kubekey/pki/root.crt
        dest: /etc/kubernetes/pki/etcd/ca.crt
        mode: 0755
    - name: Sync etcd cert files to remote
      copy:
        src: |
          {{ .work_dir }}/kubekey/pki/etcd.crt
        dest: /etc/kubernetes/pki/etcd/client.crt
        mode: 0755
    - name: Sync etcd key files to remote
      copy:
        src: |
          {{ .work_dir }}/kubekey/pki/etcd.key
        dest: /etc/kubernetes/pki/etcd/client.key
        mode: 0755

- name: Generate kubeadm init config
  template:
    src: |
      {{- if .kube_version | semverCompare ">=v1.24.0" }}
      kubeadm/kubeadm-init.v1beta3
      {{- else }}
      kubeadm/kubeadm-init.v1beta2
      {{- end }}
    dest: /etc/kubernetes/kubeadm-config.yaml

# HAProxy is deployed as a static Pod, which starts only after Kubelet is running.
# Therefore, the control plane must be reachable before HAProxy starts (e.g., by configuring /etc/hosts).
- name: Write tmp dns to /etc/hosts
  command: |
    cat >> /etc/hosts << EOF
    # haproxy dns for kubekey begin
    {{- if ne .internal_ipv4 "" }}
    {{ .internal_ipv4 }} {{ .kubernetes.control_plane_endpoint.host }}
    {{- else if ne .internal_ipv6 "" }}
    {{ .internal_ipv6  }} {{ .kubernetes.control_plane_endpoint.host }}
    {{- end }}
    # haproxy dns for kubekey end
    EOF
  when:
    - .kubernetes.control_plane_endpoint.type | eq "haproxy"

- name: Init kubernetes cluster
  command: |
    /usr/local/bin/kubeadm init --config=/etc/kubernetes/kubeadm-config.yaml --ignore-preflight-errors=FileExisting-crictl,ImagePull {{ if not .kubernetes.kube_proxy.enabled }}--skip-phases=addon/kube-proxy{{ end }}
    
- name: Copy kubeconfig to default dir
  command: |
    if [ ! -d /root/.kube ]; then
      mkdir -p /root/.kube
    fi
    cp -f /etc/kubernetes/admin.conf /root/.kube/config
  when: .kubernetes_install_service.stdout | eq "inactive"

- name: Set to worker node
  when: .groups.kube_worker | default list | has .inventory_name
  block:
    - name: Remote master taint
      ignore_errors: true
      command: |
        /usr/local/bin/kubectl taint nodes {{ .hostname }} node-role.kubernetes.io/master=:NoSchedule-
        /usr/local/bin/kubectl taint nodes {{ .hostname }} node-role.kubernetes.io/control-plane=:NoSchedule-
    - name: Add work label
      command: |
        /usr/local/bin/kubectl label --overwrite node {{ .hostname }} node-role.kubernetes.io/worker=
