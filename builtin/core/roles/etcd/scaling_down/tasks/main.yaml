---
- name: ScalingDown | Execute actions on etcd nodes scheduled for removal
  block:
    - name: ScalingDown | Remove etcd member from cluster
      when:
        - .need_uninstall_etcd | default "[]" | fromJson | has .inventory_hostname
      delegate_to: "{{ .installed_etcd }}"
      command: |
        ETCDCTL_API=3 etcdctl \
          --endpoints=https://localhost:2379 \
          --cacert=/etc/ssl/etcd/ssl/ca.crt \
          --cert=/etc/ssl/etcd/ssl/server.crt \
          --key=/etc/ssl/etcd/ssl/server.key \
          member remove $(ETCDCTL_API=3 etcdctl \
            --endpoints=https://localhost:2379 \
            --cacert=/etc/ssl/etcd/ssl/ca.crt \
            --cert=/etc/ssl/etcd/ssl/server.crt \
            --key=/etc/ssl/etcd/ssl/server.key \
            member list | grep {{ .hostname }} | awk -F',' '{print $1}')
    - name: ScalingDown | delete etcd
      # If need_uninstall_etcd is empty, remove the entire cluster.
      # If need_uninstall_etcd is not empty, remove only the specified node.
      when: >-
        or 
          (.need_uninstall_etcd | default "[]" | fromJson | empty)
          (.need_uninstall_etcd | default "[]" | fromJson | has .inventory_hostname)
      block: 
        - name: ScalingDown | Stop and disable the etcd systemd service
          ignore_errors: true
          command: |
            systemctl stop etcd.service
            systemctl disable etcd.service
            rm -rf /etc/systemd/system/etcd.service*
            systemctl daemon-reload
            systemctl reset-failed etcd.service
        - name: ScalingDown | Remove traffic prioritization rules for etcd ports
          when: .etcd.traffic_priority
          command: |
            tc filter del dev eth0 parent 1: protocol ip prio 1 u32 match ip sport 2379 0xffff
            tc filter del dev eth0 parent 1: protocol ip prio 1 u32 match ip sport 2380 0xffff
        - name: ScalingDown | Delete all etcd data, configuration, and binaries
          command: |
            rm -rf {{ .etcd.env.data_dir }}
            rm -rf /etc/ssl/etcd/
            rm -rf /etc/etcd.env
            rm -rf /usr/local/bin/etcd*
        - name: ScalingDown | Remove backup-etcd timer, service, and backup scripts
          ignore_errors: true
          command: |
            systemctl disable --now backup-etcd.timer
            rm /etc/systemd/system/backup-etcd.timer
            rm -rf /etc/systemd/system/backup-etcd.service*
            rm /usr/local/bin/kube-scripts/backup_etcd.sh
            systemctl daemon-reexec && systemctl daemon-reload

- name: ScalingDown | Restart etcd cluster on remaining members
  when:
    - .need_uninstall_etcd | default "[]" | fromJson | empty | not
    - .etcd_install_LoadState.stdout | eq "loaded"
    - .need_uninstall_etcd | default "[]" | fromJson | has .inventory_hostname | not
  block:
    - name: ScalingDown | Restart the etcd service
      command: |
        systemctl restart etcd.service
    - name: ScalingDown | Wait for etcd service to become healthy
      command: |
        for ((i=1; i<=12; i++)); do
          if ETCDCTL_API=3 etcdctl \
            --endpoints=https://localhost:2379 \
            --cacert=/etc/ssl/etcd/ssl/ca.crt \
            --cert=/etc/ssl/etcd/ssl/server.crt \
            --key=/etc/ssl/etcd/ssl/server.key \
            endpoint health >/dev/null 2>&1; then
            echo "✅ etcd is healthy"
            exit 0
          fi
          sleep 5
        done
        echo "❌ etcd did not become healthy within 1 minute"
        exit 1