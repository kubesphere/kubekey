version = 2

root = {{ .cri.containerd.data_root | default "/var/lib/containerd" }}
state = "/run/containerd"

[grpc]
  address = "/run/containerd/containerd.sock"
  uid = 0
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216

[ttrpc]
  address = ""
  uid = 0
  gid = 0

[debug]
  address = ""
  uid = 0
  gid = 0
  level = ""

[metrics]
  address = ""
  grpc_histogram = false

[cgroup]
  path = ""

[timeouts]
  "io.containerd.timeout.shim.cleanup" = "5s"
  "io.containerd.timeout.shim.load" = "5s"
  "io.containerd.timeout.shim.shutdown" = "3s"
  "io.containerd.timeout.task.state" = "2s"

[plugins]
  [plugins."io.containerd.grpc.v1.cri"]
    sandbox_image = "{{ .cri.sandbox_image }}"
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
      runtime_type = "io.containerd.runc.v2"
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
        SystemdCgroup = {{ if .cri.cgroup_driver | eq "systemd") }}true{{ else }}false{{ end }}
    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      max_conf_num = 1
      conf_template = ""
    [plugins."io.containerd.grpc.v1.cri".registry]
      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
{{- if .cri.registry.mirrors | len | lt 0 }}
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
          endpoint = {{ .cri.registry.mirrors | toJson }}
{{- end }}
{{- range .cri.registry.insecure_registries }}
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."{{ . }}"]
          endpoint = ["http://{{ . }}"]
{{- end }}
{{- if or (.cri.registry.auths | len | lt 0) (.groups.image_registry | default list | len | lt 0) }}
        [plugins."io.containerd.grpc.v1.cri".registry.configs]
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ .image_registry.auth.registry }}".auth]
            username = "{{ .image_registry.auth.username }}"
            password = "{{ .image_registry.auth.password }}"
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ .image_registry.auth.registry }}".tls]
            ca_file = "/etc/containerd/certs.d/{{ .image_registry.auth.registry }}/ca.crt"
            cert_file = "/etc/containerd/certs.d/{{ .image_registry.auth.registry }}/server.crt"
            key_file = "/etc/containerd/certs.d/{{ image_registry.auth.registry }}/server.key"
    {{- range .cri.registry.auths }}
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ .repo }}".auth]
            username = "{{ .username }}"
            password = "{{ .password }}"
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ .repo }}".tls]
        {{- if.ca_file }}
            ca_file = {{ .ca_file }}
        {{- end }}
        {{- if .crt_file }}
            cert_file = {{ .crt_file }}
        {{- end }}
        {{- if .key_file }}
            key_file = {{ .key_file }}
        {{- end }}
            insecure_skip_verify = {{ .skip_ssl | default true }}
    {{- end }}
{{- end }}
